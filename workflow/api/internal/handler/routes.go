// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	GetToken "zero-workflow/workflow/api/internal/handler/GetToken"
	Procdef "zero-workflow/workflow/api/internal/handler/Procdef"
	Procinst "zero-workflow/workflow/api/internal/handler/Procinst"
	Take "zero-workflow/workflow/api/internal/handler/Take"
	"zero-workflow/workflow/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/procdef",
				Handler: Procdef.ProcdefAddHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/procdef",
				Handler: Procdef.ProcdefListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/procdefInfo/:id",
				Handler: Procdef.ProcdefInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/process/start",
				Handler: Procdef.ProcessStartHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/procinst",
				Handler: Procinst.ProcinstFindListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/procinstInfo/:id",
				Handler: Procinst.ProcinstInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/procinstClose/:id",
				Handler: Procinst.ProcinstCloseHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/task/complete",
				Handler: Take.TaskCompleteHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/task",
				Handler: Take.TaskListByUserIdHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/getToken",
				Handler: GetToken.GetTokenHandler(serverCtx),
			},
		},
	)
}
