// Code generated by goctl. DO NOT EDIT!
// Source: workflow.proto

package workflow

import (
	"context"
	"zero-workflow/workflow/rpc/workflowclient"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CommonResp                       = workflowclient.CommonResp
	ExecutionFindOneByProcinstIdReq  = workflowclient.ExecutionFindOneByProcinstIdReq
	ExecutionFindOneByProcinstIdResp = workflowclient.ExecutionFindOneByProcinstIdResp
	ProcdefAddReq                    = workflowclient.ProcdefAddReq
	ProcdefDeleteReq                 = workflowclient.ProcdefDeleteReq
	ProcdefFindListReq               = workflowclient.ProcdefFindListReq
	ProcdefFindListResp              = workflowclient.ProcdefFindListResp
	ProcdefFindOneReq                = workflowclient.ProcdefFindOneReq
	ProcdefFindOneResp               = workflowclient.ProcdefFindOneResp
	ProcdefListData                  = workflowclient.ProcdefListData
	ProcessStartReq                  = workflowclient.ProcessStartReq
	ProcinstCloseReq                 = workflowclient.ProcinstCloseReq
	ProcinstFindListReq              = workflowclient.ProcinstFindListReq
	ProcinstFindListResp             = workflowclient.ProcinstFindListResp
	ProcinstFindOneReq               = workflowclient.ProcinstFindOneReq
	ProcinstFindOneResp              = workflowclient.ProcinstFindOneResp
	ProcinstListData                 = workflowclient.ProcinstListData
	TaskCompleteReq                  = workflowclient.TaskCompleteReq
	TaskFindListByProcinstIdReq      = workflowclient.TaskFindListByProcinstIdReq
	TaskFindListByProcinstIdResp     = workflowclient.TaskFindListByProcinstIdResp
	TaskFindListByUserIdReq          = workflowclient.TaskFindListByUserIdReq
	TaskFindListByUserIdResp         = workflowclient.TaskFindListByUserIdResp
	TaskListData                     = workflowclient.TaskListData
	TaskProcinstData                 = workflowclient.TaskProcinstData

	Workflow interface {
		// -------------------------添加流程定义----------------------
		ProcdefAdd(ctx context.Context, in *ProcdefAddReq, opts ...grpc.CallOption) (*CommonResp, error)
		ProcdefDelete(ctx context.Context, in *ProcdefDeleteReq, opts ...grpc.CallOption) (*CommonResp, error)
		ProcdefFindList(ctx context.Context, in *ProcdefFindListReq, opts ...grpc.CallOption) (*ProcdefFindListResp, error)
		ProcdefFindOne(ctx context.Context, in *ProcdefFindOneReq, opts ...grpc.CallOption) (*ProcdefFindOneResp, error)
		//  启动流程
		ProcessStart(ctx context.Context, in *ProcessStartReq, opts ...grpc.CallOption) (*CommonResp, error)
		//  -----------------------流程实例-----------------------
		ProcinstFindOne(ctx context.Context, in *ProcinstFindOneReq, opts ...grpc.CallOption) (*ProcinstFindOneResp, error)
		ProcinstFindList(ctx context.Context, in *ProcinstFindListReq, opts ...grpc.CallOption) (*ProcinstFindListResp, error)
		ProcinstClose(ctx context.Context, in *ProcinstCloseReq, opts ...grpc.CallOption) (*CommonResp, error)
		//  -----------------------任务--------------------------
		TaskComplete(ctx context.Context, in *TaskCompleteReq, opts ...grpc.CallOption) (*CommonResp, error)
		TaskFindListByUserId(ctx context.Context, in *TaskFindListByUserIdReq, opts ...grpc.CallOption) (*TaskFindListByUserIdResp, error)
		TaskFindListByProcinstId(ctx context.Context, in *TaskFindListByProcinstIdReq, opts ...grpc.CallOption) (*TaskFindListByProcinstIdResp, error)
		//  -----------------------实例内容-----------------------------
		ExecutionFindOneByProcinstId(ctx context.Context, in *ExecutionFindOneByProcinstIdReq, opts ...grpc.CallOption) (*ExecutionFindOneByProcinstIdResp, error)
	}

	defaultWorkflow struct {
		cli zrpc.Client
	}
)

func NewWorkflow(cli zrpc.Client) Workflow {
	return &defaultWorkflow{
		cli: cli,
	}
}

// -------------------------添加流程定义----------------------
func (m *defaultWorkflow) ProcdefAdd(ctx context.Context, in *ProcdefAddReq, opts ...grpc.CallOption) (*CommonResp, error) {
	client := workflowclient.NewWorkflowClient(m.cli.Conn())
	return client.ProcdefAdd(ctx, in, opts...)
}

func (m *defaultWorkflow) ProcdefDelete(ctx context.Context, in *ProcdefDeleteReq, opts ...grpc.CallOption) (*CommonResp, error) {
	client := workflowclient.NewWorkflowClient(m.cli.Conn())
	return client.ProcdefDelete(ctx, in, opts...)
}

func (m *defaultWorkflow) ProcdefFindList(ctx context.Context, in *ProcdefFindListReq, opts ...grpc.CallOption) (*ProcdefFindListResp, error) {
	client := workflowclient.NewWorkflowClient(m.cli.Conn())
	return client.ProcdefFindList(ctx, in, opts...)
}

func (m *defaultWorkflow) ProcdefFindOne(ctx context.Context, in *ProcdefFindOneReq, opts ...grpc.CallOption) (*ProcdefFindOneResp, error) {
	client := workflowclient.NewWorkflowClient(m.cli.Conn())
	return client.ProcdefFindOne(ctx, in, opts...)
}

//  启动流程
func (m *defaultWorkflow) ProcessStart(ctx context.Context, in *ProcessStartReq, opts ...grpc.CallOption) (*CommonResp, error) {
	client := workflowclient.NewWorkflowClient(m.cli.Conn())
	return client.ProcessStart(ctx, in, opts...)
}

//  -----------------------流程实例-----------------------
func (m *defaultWorkflow) ProcinstFindOne(ctx context.Context, in *ProcinstFindOneReq, opts ...grpc.CallOption) (*ProcinstFindOneResp, error) {
	client := workflowclient.NewWorkflowClient(m.cli.Conn())
	return client.ProcinstFindOne(ctx, in, opts...)
}

func (m *defaultWorkflow) ProcinstFindList(ctx context.Context, in *ProcinstFindListReq, opts ...grpc.CallOption) (*ProcinstFindListResp, error) {
	client := workflowclient.NewWorkflowClient(m.cli.Conn())
	return client.ProcinstFindList(ctx, in, opts...)
}

func (m *defaultWorkflow) ProcinstClose(ctx context.Context, in *ProcinstCloseReq, opts ...grpc.CallOption) (*CommonResp, error) {
	client := workflowclient.NewWorkflowClient(m.cli.Conn())
	return client.ProcinstClose(ctx, in, opts...)
}

//  -----------------------任务--------------------------
func (m *defaultWorkflow) TaskComplete(ctx context.Context, in *TaskCompleteReq, opts ...grpc.CallOption) (*CommonResp, error) {
	client := workflowclient.NewWorkflowClient(m.cli.Conn())
	return client.TaskComplete(ctx, in, opts...)
}

func (m *defaultWorkflow) TaskFindListByUserId(ctx context.Context, in *TaskFindListByUserIdReq, opts ...grpc.CallOption) (*TaskFindListByUserIdResp, error) {
	client := workflowclient.NewWorkflowClient(m.cli.Conn())
	return client.TaskFindListByUserId(ctx, in, opts...)
}

func (m *defaultWorkflow) TaskFindListByProcinstId(ctx context.Context, in *TaskFindListByProcinstIdReq, opts ...grpc.CallOption) (*TaskFindListByProcinstIdResp, error) {
	client := workflowclient.NewWorkflowClient(m.cli.Conn())
	return client.TaskFindListByProcinstId(ctx, in, opts...)
}

//  -----------------------实例内容-----------------------------
func (m *defaultWorkflow) ExecutionFindOneByProcinstId(ctx context.Context, in *ExecutionFindOneByProcinstIdReq, opts ...grpc.CallOption) (*ExecutionFindOneByProcinstIdResp, error) {
	client := workflowclient.NewWorkflowClient(m.cli.Conn())
	return client.ExecutionFindOneByProcinstId(ctx, in, opts...)
}
