// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: workflow.proto

package workflowclient

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 通用空返回
type CommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommonResp) Reset() {
	*x = CommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResp) ProtoMessage() {}

func (x *CommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResp.ProtoReflect.Descriptor instead.
func (*CommonResp) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{0}
}

//流程定义 start---------------------
type ProcdefAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedName string `protobuf:"bytes,1,opt,name=created_name,json=createdName,proto3" json:"created_name,omitempty"` // 创建人
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                  // 流程名称
	Data        string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`                                  // 流程内容
	ProcType    string `protobuf:"bytes,4,opt,name=proc_type,json=procType,proto3" json:"proc_type,omitempty"`          // 流程类型
	Resource    string `protobuf:"bytes,5,opt,name=resource,proto3" json:"resource,omitempty"`                          // 流程内容
	TenantId    string `protobuf:"bytes,6,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`          // 租户id
}

func (x *ProcdefAddReq) Reset() {
	*x = ProcdefAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcdefAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcdefAddReq) ProtoMessage() {}

func (x *ProcdefAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcdefAddReq.ProtoReflect.Descriptor instead.
func (*ProcdefAddReq) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{1}
}

func (x *ProcdefAddReq) GetCreatedName() string {
	if x != nil {
		return x.CreatedName
	}
	return ""
}

func (x *ProcdefAddReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProcdefAddReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *ProcdefAddReq) GetProcType() string {
	if x != nil {
		return x.ProcType
	}
	return ""
}

func (x *ProcdefAddReq) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *ProcdefAddReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type ProcdefDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                             // 删除id
	TenantId string `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"` // 租户id
}

func (x *ProcdefDeleteReq) Reset() {
	*x = ProcdefDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcdefDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcdefDeleteReq) ProtoMessage() {}

func (x *ProcdefDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcdefDeleteReq.ProtoReflect.Descriptor instead.
func (*ProcdefDeleteReq) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{2}
}

func (x *ProcdefDeleteReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProcdefDeleteReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type ProcdefFindListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                         // 流程名称
	ProcType string `protobuf:"bytes,4,opt,name=proc_type,json=procType,proto3" json:"proc_type,omitempty"` // 流程名称
	TenantId string `protobuf:"bytes,5,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"` // 租户id
}

func (x *ProcdefFindListReq) Reset() {
	*x = ProcdefFindListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcdefFindListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcdefFindListReq) ProtoMessage() {}

func (x *ProcdefFindListReq) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcdefFindListReq.ProtoReflect.Descriptor instead.
func (*ProcdefFindListReq) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{3}
}

func (x *ProcdefFindListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ProcdefFindListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ProcdefFindListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProcdefFindListReq) GetProcType() string {
	if x != nil {
		return x.ProcType
	}
	return ""
}

func (x *ProcdefFindListReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type ProcdefFindListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*ProcdefListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ProcdefFindListResp) Reset() {
	*x = ProcdefFindListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcdefFindListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcdefFindListResp) ProtoMessage() {}

func (x *ProcdefFindListResp) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcdefFindListResp.ProtoReflect.Descriptor instead.
func (*ProcdefFindListResp) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{4}
}

func (x *ProcdefFindListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ProcdefFindListResp) GetList() []*ProcdefListData {
	if x != nil {
		return x.List
	}
	return nil
}

type ProcdefListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                      // 流程id
	CreatedAt   int64  `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`      // 创建时间
	CreatedName string `protobuf:"bytes,3,opt,name=created_name,json=createdName,proto3" json:"created_name,omitempty"` // 创建人
	Name        string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                                  // 流程名称
	ProcType    string `protobuf:"bytes,5,opt,name=proc_type,json=procType,proto3" json:"proc_type,omitempty"`          // 流程类型
}

func (x *ProcdefListData) Reset() {
	*x = ProcdefListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcdefListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcdefListData) ProtoMessage() {}

func (x *ProcdefListData) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcdefListData.ProtoReflect.Descriptor instead.
func (*ProcdefListData) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{5}
}

func (x *ProcdefListData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProcdefListData) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ProcdefListData) GetCreatedName() string {
	if x != nil {
		return x.CreatedName
	}
	return ""
}

func (x *ProcdefListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProcdefListData) GetProcType() string {
	if x != nil {
		return x.ProcType
	}
	return ""
}

type ProcdefFindOneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantId string `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"` // 租户id
}

func (x *ProcdefFindOneReq) Reset() {
	*x = ProcdefFindOneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcdefFindOneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcdefFindOneReq) ProtoMessage() {}

func (x *ProcdefFindOneReq) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcdefFindOneReq.ProtoReflect.Descriptor instead.
func (*ProcdefFindOneReq) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{6}
}

func (x *ProcdefFindOneReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProcdefFindOneReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type ProcdefFindOneResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                      // 流程id
	CreatedAt   int64  `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`      // 创建时间
	CreatedName string `protobuf:"bytes,3,opt,name=created_name,json=createdName,proto3" json:"created_name,omitempty"` // 创建人
	Data        string `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`                                  //内容
	Name        string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`                                  // 流程名称
	ProcType    string `protobuf:"bytes,6,opt,name=proc_type,json=procType,proto3" json:"proc_type,omitempty"`          // 流程类型
	Resource    string `protobuf:"bytes,7,opt,name=resource,proto3" json:"resource,omitempty"`                          // 流程类型
}

func (x *ProcdefFindOneResp) Reset() {
	*x = ProcdefFindOneResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcdefFindOneResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcdefFindOneResp) ProtoMessage() {}

func (x *ProcdefFindOneResp) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcdefFindOneResp.ProtoReflect.Descriptor instead.
func (*ProcdefFindOneResp) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{7}
}

func (x *ProcdefFindOneResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProcdefFindOneResp) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ProcdefFindOneResp) GetCreatedName() string {
	if x != nil {
		return x.CreatedName
	}
	return ""
}

func (x *ProcdefFindOneResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *ProcdefFindOneResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProcdefFindOneResp) GetProcType() string {
	if x != nil {
		return x.ProcType
	}
	return ""
}

func (x *ProcdefFindOneResp) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

type ProcessStartReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcdefId   string `protobuf:"bytes,1,opt,name=procdef_id,json=procdefId,proto3" json:"procdef_id,omitempty"`    // 流程id
	ProcinstId  string `protobuf:"bytes,2,opt,name=procinst_id,json=procinstId,proto3" json:"procinst_id,omitempty"` // 流程实例id
	Title       string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`                             // 标题
	UserId      string `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`             // 用户ID
	NickName    string `protobuf:"bytes,5,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`       // 用户昵称
	TenantId    string `protobuf:"bytes,6,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`       // 租户id
	Procdefdata []byte `protobuf:"bytes,7,opt,name=procdefdata,proto3" json:"procdefdata,omitempty"`                 //procdef对象
}

func (x *ProcessStartReq) Reset() {
	*x = ProcessStartReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessStartReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessStartReq) ProtoMessage() {}

func (x *ProcessStartReq) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessStartReq.ProtoReflect.Descriptor instead.
func (*ProcessStartReq) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{8}
}

func (x *ProcessStartReq) GetProcdefId() string {
	if x != nil {
		return x.ProcdefId
	}
	return ""
}

func (x *ProcessStartReq) GetProcinstId() string {
	if x != nil {
		return x.ProcinstId
	}
	return ""
}

func (x *ProcessStartReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ProcessStartReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ProcessStartReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *ProcessStartReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ProcessStartReq) GetProcdefdata() []byte {
	if x != nil {
		return x.Procdefdata
	}
	return nil
}

type ProcinstFindOneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ProcinstFindOneReq) Reset() {
	*x = ProcinstFindOneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcinstFindOneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcinstFindOneReq) ProtoMessage() {}

func (x *ProcinstFindOneReq) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcinstFindOneReq.ProtoReflect.Descriptor instead.
func (*ProcinstFindOneReq) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{9}
}

func (x *ProcinstFindOneReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ProcinstFindOneResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                              // 流程实例id
	ProcType      string `protobuf:"bytes,2,opt,name=proc_type,json=procType,proto3" json:"proc_type,omitempty"`                  // 流程类型
	ProcdefName   string `protobuf:"bytes,3,opt,name=procdef_name,json=procdefName,proto3" json:"procdef_name,omitempty"`         // 流程名
	Title         string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`                                        // 标题
	StartTime     int64  `protobuf:"varint,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`              // 开始时间
	EndTime       int64  `protobuf:"varint,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                    // 结束时间
	StartUserId   string `protobuf:"bytes,7,opt,name=start_user_id,json=startUserId,proto3" json:"start_user_id,omitempty"`       // 开始用户id
	StartUserName string `protobuf:"bytes,8,opt,name=start_user_name,json=startUserName,proto3" json:"start_user_name,omitempty"` // 开始用户名
	IsFinished    int64  `protobuf:"varint,9,opt,name=is_finished,json=isFinished,proto3" json:"is_finished,omitempty"`           // 是否完成
	TaskId        string `protobuf:"bytes,10,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`                       //9; // 是否完成
	NodeId        string `protobuf:"bytes,11,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`                       // 是否完成
	NodeName      string `protobuf:"bytes,12,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`                 // 节点名字
	NodeType      string `protobuf:"bytes,13,opt,name=node_type,json=nodeType,proto3" json:"node_type,omitempty"`                 // 节点类型
	Step          int64  `protobuf:"varint,14,opt,name=step,proto3" json:"step,omitempty"`                                        // 第几步
	AssigneeId    string `protobuf:"bytes,15,opt,name=assignee_id,json=assigneeId,proto3" json:"assignee_id,omitempty"`           // 审批人名
	AssigneeName  string `protobuf:"bytes,16,opt,name=assignee_name,json=assigneeName,proto3" json:"assignee_name,omitempty"`     // 审批人名
}

func (x *ProcinstFindOneResp) Reset() {
	*x = ProcinstFindOneResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcinstFindOneResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcinstFindOneResp) ProtoMessage() {}

func (x *ProcinstFindOneResp) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcinstFindOneResp.ProtoReflect.Descriptor instead.
func (*ProcinstFindOneResp) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{10}
}

func (x *ProcinstFindOneResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProcinstFindOneResp) GetProcType() string {
	if x != nil {
		return x.ProcType
	}
	return ""
}

func (x *ProcinstFindOneResp) GetProcdefName() string {
	if x != nil {
		return x.ProcdefName
	}
	return ""
}

func (x *ProcinstFindOneResp) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ProcinstFindOneResp) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ProcinstFindOneResp) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ProcinstFindOneResp) GetStartUserId() string {
	if x != nil {
		return x.StartUserId
	}
	return ""
}

func (x *ProcinstFindOneResp) GetStartUserName() string {
	if x != nil {
		return x.StartUserName
	}
	return ""
}

func (x *ProcinstFindOneResp) GetIsFinished() int64 {
	if x != nil {
		return x.IsFinished
	}
	return 0
}

func (x *ProcinstFindOneResp) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ProcinstFindOneResp) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ProcinstFindOneResp) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *ProcinstFindOneResp) GetNodeType() string {
	if x != nil {
		return x.NodeType
	}
	return ""
}

func (x *ProcinstFindOneResp) GetStep() int64 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *ProcinstFindOneResp) GetAssigneeId() string {
	if x != nil {
		return x.AssigneeId
	}
	return ""
}

func (x *ProcinstFindOneResp) GetAssigneeName() string {
	if x != nil {
		return x.AssigneeName
	}
	return ""
}

type ProcinstFindListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current       int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize      int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	ProcType      string `protobuf:"bytes,3,opt,name=proc_type,json=procType,proto3" json:"proc_type,omitempty"`                  // 流程类型
	ProcdefName   string `protobuf:"bytes,4,opt,name=procdef_name,json=procdefName,proto3" json:"procdef_name,omitempty"`         // 流程名
	Title         string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`                                        // 标题
	StartTime     int64  `protobuf:"varint,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`              // 开始时间
	EndTime       int64  `protobuf:"varint,7,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                    // 结束时间
	StartUserName string `protobuf:"bytes,8,opt,name=start_user_name,json=startUserName,proto3" json:"start_user_name,omitempty"` // 开始用户名
	IsFinished    int64  `protobuf:"varint,9,opt,name=is_finished,json=isFinished,proto3" json:"is_finished,omitempty"`           // 是否完成
	TenantId      string `protobuf:"bytes,10,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`                 // 租户id
}

func (x *ProcinstFindListReq) Reset() {
	*x = ProcinstFindListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcinstFindListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcinstFindListReq) ProtoMessage() {}

func (x *ProcinstFindListReq) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcinstFindListReq.ProtoReflect.Descriptor instead.
func (*ProcinstFindListReq) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{11}
}

func (x *ProcinstFindListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ProcinstFindListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ProcinstFindListReq) GetProcType() string {
	if x != nil {
		return x.ProcType
	}
	return ""
}

func (x *ProcinstFindListReq) GetProcdefName() string {
	if x != nil {
		return x.ProcdefName
	}
	return ""
}

func (x *ProcinstFindListReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ProcinstFindListReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ProcinstFindListReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ProcinstFindListReq) GetStartUserName() string {
	if x != nil {
		return x.StartUserName
	}
	return ""
}

func (x *ProcinstFindListReq) GetIsFinished() int64 {
	if x != nil {
		return x.IsFinished
	}
	return 0
}

func (x *ProcinstFindListReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type ProcinstFindListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64               `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*ProcinstListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ProcinstFindListResp) Reset() {
	*x = ProcinstFindListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcinstFindListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcinstFindListResp) ProtoMessage() {}

func (x *ProcinstFindListResp) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcinstFindListResp.ProtoReflect.Descriptor instead.
func (*ProcinstFindListResp) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{12}
}

func (x *ProcinstFindListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ProcinstFindListResp) GetList() []*ProcinstListData {
	if x != nil {
		return x.List
	}
	return nil
}

type ProcinstListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                              // 流程实例id
	ProcType      string `protobuf:"bytes,2,opt,name=proc_type,json=procType,proto3" json:"proc_type,omitempty"`                  // 流程类型
	ProcdefName   string `protobuf:"bytes,3,opt,name=procdef_name,json=procdefName,proto3" json:"procdef_name,omitempty"`         // 流程名
	Title         string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`                                        // 标题
	StartTime     int64  `protobuf:"varint,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`              // 开始时间
	EndTime       int64  `protobuf:"varint,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                    // 结束时间
	StartUserId   string `protobuf:"bytes,7,opt,name=start_user_id,json=startUserId,proto3" json:"start_user_id,omitempty"`       // 开始用户id
	StartUserName string `protobuf:"bytes,8,opt,name=start_user_name,json=startUserName,proto3" json:"start_user_name,omitempty"` // 开始用户名
	IsFinished    int64  `protobuf:"varint,9,opt,name=is_finished,json=isFinished,proto3" json:"is_finished,omitempty"`           // 是否完成
	TaskId        string `protobuf:"bytes,10,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`                       //9; // 是否完成
	NodeId        string `protobuf:"bytes,11,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`                       // 是否完成
	NodeName      string `protobuf:"bytes,12,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`                 // 节点名字
	NodeType      string `protobuf:"bytes,13,opt,name=node_type,json=nodeType,proto3" json:"node_type,omitempty"`                 // 节点类型
	Step          int64  `protobuf:"varint,14,opt,name=step,proto3" json:"step,omitempty"`                                        // 第几步
	AssigneeId    string `protobuf:"bytes,15,opt,name=assignee_id,json=assigneeId,proto3" json:"assignee_id,omitempty"`           // 审批人名
	AssigneeName  string `protobuf:"bytes,16,opt,name=assignee_name,json=assigneeName,proto3" json:"assignee_name,omitempty"`     // 审批人名
}

func (x *ProcinstListData) Reset() {
	*x = ProcinstListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcinstListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcinstListData) ProtoMessage() {}

func (x *ProcinstListData) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcinstListData.ProtoReflect.Descriptor instead.
func (*ProcinstListData) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{13}
}

func (x *ProcinstListData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProcinstListData) GetProcType() string {
	if x != nil {
		return x.ProcType
	}
	return ""
}

func (x *ProcinstListData) GetProcdefName() string {
	if x != nil {
		return x.ProcdefName
	}
	return ""
}

func (x *ProcinstListData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ProcinstListData) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ProcinstListData) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ProcinstListData) GetStartUserId() string {
	if x != nil {
		return x.StartUserId
	}
	return ""
}

func (x *ProcinstListData) GetStartUserName() string {
	if x != nil {
		return x.StartUserName
	}
	return ""
}

func (x *ProcinstListData) GetIsFinished() int64 {
	if x != nil {
		return x.IsFinished
	}
	return 0
}

func (x *ProcinstListData) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ProcinstListData) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ProcinstListData) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *ProcinstListData) GetNodeType() string {
	if x != nil {
		return x.NodeType
	}
	return ""
}

func (x *ProcinstListData) GetStep() int64 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *ProcinstListData) GetAssigneeId() string {
	if x != nil {
		return x.AssigneeId
	}
	return ""
}

func (x *ProcinstListData) GetAssigneeName() string {
	if x != nil {
		return x.AssigneeName
	}
	return ""
}

type ProcinstCloseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId   string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	TenantId string `protobuf:"bytes,4,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
}

func (x *ProcinstCloseReq) Reset() {
	*x = ProcinstCloseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcinstCloseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcinstCloseReq) ProtoMessage() {}

func (x *ProcinstCloseReq) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcinstCloseReq.ProtoReflect.Descriptor instead.
func (*ProcinstCloseReq) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{14}
}

func (x *ProcinstCloseReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProcinstCloseReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ProcinstCloseReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ProcinstCloseReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

//任务 start---------------------
type TaskCompleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId   string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`       // 任务ID
	UserId   string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`       // 租户id
	UserName string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"` // 租户id
	Pass     bool   `protobuf:"varint,4,opt,name=pass,proto3" json:"pass,omitempty"`                        // 是否通用
	Comment  string `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`                   // 是否通用
	TenantId string `protobuf:"bytes,6,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"` // 租户id
}

func (x *TaskCompleteReq) Reset() {
	*x = TaskCompleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskCompleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCompleteReq) ProtoMessage() {}

func (x *TaskCompleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCompleteReq.ProtoReflect.Descriptor instead.
func (*TaskCompleteReq) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{15}
}

func (x *TaskCompleteReq) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskCompleteReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TaskCompleteReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *TaskCompleteReq) GetPass() bool {
	if x != nil {
		return x.Pass
	}
	return false
}

func (x *TaskCompleteReq) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *TaskCompleteReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type TaskFindListByUserIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current  int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	UserId   string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 租户id
}

func (x *TaskFindListByUserIdReq) Reset() {
	*x = TaskFindListByUserIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskFindListByUserIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskFindListByUserIdReq) ProtoMessage() {}

func (x *TaskFindListByUserIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskFindListByUserIdReq.ProtoReflect.Descriptor instead.
func (*TaskFindListByUserIdReq) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{16}
}

func (x *TaskFindListByUserIdReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *TaskFindListByUserIdReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *TaskFindListByUserIdReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type TaskFindListByUserIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*TaskListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *TaskFindListByUserIdResp) Reset() {
	*x = TaskFindListByUserIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskFindListByUserIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskFindListByUserIdResp) ProtoMessage() {}

func (x *TaskFindListByUserIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskFindListByUserIdResp.ProtoReflect.Descriptor instead.
func (*TaskFindListByUserIdResp) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{17}
}

func (x *TaskFindListByUserIdResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TaskFindListByUserIdResp) GetList() []*TaskListData {
	if x != nil {
		return x.List
	}
	return nil
}

type TaskListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId        string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`                         // 任务ID
	ProcinstId    string `protobuf:"bytes,2,opt,name=procinst_id,json=procinstId,proto3" json:"procinst_id,omitempty"`             // 流程实例ID
	CreatedAt     int64  `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`               // Task创建时间
	NodeId        string `protobuf:"bytes,4,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`                         // 当前执行流所在的节点ID
	Step          int64  `protobuf:"varint,5,opt,name=step,proto3" json:"step,omitempty"`                                          // 第几步
	AgreeNum      string `protobuf:"bytes,6,opt,name=agree_num,json=agreeNum,proto3" json:"agree_num,omitempty"`                   //同意数
	ProcType      string `protobuf:"bytes,7,opt,name=proc_type,json=procType,proto3" json:"proc_type,omitempty"`                   // 流程类型
	ProcinstName  string `protobuf:"bytes,8,opt,name=procinst_name,json=procinstName,proto3" json:"procinst_name,omitempty"`       //  流程名
	ProcinstTitle string `protobuf:"bytes,9,opt,name=procinst_title,json=procinstTitle,proto3" json:"procinst_title,omitempty"`    //流程标题
	StartTime     int64  `protobuf:"varint,10,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`              // 开始时间
	StartUserName string `protobuf:"bytes,11,opt,name=start_user_name,json=startUserName,proto3" json:"start_user_name,omitempty"` //  创建人名
	StartUserId   string `protobuf:"bytes,12,opt,name=start_user_id,json=startUserId,proto3" json:"start_user_id,omitempty"`       // 创建人Id
}

func (x *TaskListData) Reset() {
	*x = TaskListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskListData) ProtoMessage() {}

func (x *TaskListData) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskListData.ProtoReflect.Descriptor instead.
func (*TaskListData) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{18}
}

func (x *TaskListData) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskListData) GetProcinstId() string {
	if x != nil {
		return x.ProcinstId
	}
	return ""
}

func (x *TaskListData) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TaskListData) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *TaskListData) GetStep() int64 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *TaskListData) GetAgreeNum() string {
	if x != nil {
		return x.AgreeNum
	}
	return ""
}

func (x *TaskListData) GetProcType() string {
	if x != nil {
		return x.ProcType
	}
	return ""
}

func (x *TaskListData) GetProcinstName() string {
	if x != nil {
		return x.ProcinstName
	}
	return ""
}

func (x *TaskListData) GetProcinstTitle() string {
	if x != nil {
		return x.ProcinstTitle
	}
	return ""
}

func (x *TaskListData) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *TaskListData) GetStartUserName() string {
	if x != nil {
		return x.StartUserName
	}
	return ""
}

func (x *TaskListData) GetStartUserId() string {
	if x != nil {
		return x.StartUserId
	}
	return ""
}

type TaskFindListByProcinstIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcinstId string `protobuf:"bytes,1,opt,name=procinst_id,json=procinstId,proto3" json:"procinst_id,omitempty"`
}

func (x *TaskFindListByProcinstIdReq) Reset() {
	*x = TaskFindListByProcinstIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskFindListByProcinstIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskFindListByProcinstIdReq) ProtoMessage() {}

func (x *TaskFindListByProcinstIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskFindListByProcinstIdReq.ProtoReflect.Descriptor instead.
func (*TaskFindListByProcinstIdReq) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{19}
}

func (x *TaskFindListByProcinstIdReq) GetProcinstId() string {
	if x != nil {
		return x.ProcinstId
	}
	return ""
}

type TaskFindListByProcinstIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*TaskProcinstData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *TaskFindListByProcinstIdResp) Reset() {
	*x = TaskFindListByProcinstIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskFindListByProcinstIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskFindListByProcinstIdResp) ProtoMessage() {}

func (x *TaskFindListByProcinstIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskFindListByProcinstIdResp.ProtoReflect.Descriptor instead.
func (*TaskFindListByProcinstIdResp) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{20}
}

func (x *TaskFindListByProcinstIdResp) GetList() []*TaskProcinstData {
	if x != nil {
		return x.List
	}
	return nil
}

type TaskProcinstData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId       string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`                   // 任务ID
	CreatedAt    int64  `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`         // take创建时间
	ClaimTime    int64  `protobuf:"varint,3,opt,name=claim_time,json=claimTime,proto3" json:"claim_time,omitempty"`         // take结束
	NodeId       string `protobuf:"bytes,4,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`                   // 节点名
	NodeName     string `protobuf:"bytes,5,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`             // 节点名
	NodeType     string `protobuf:"bytes,6,opt,name=node_type,json=nodeType,proto3" json:"node_type,omitempty"`             // 字节类型
	Step         int64  `protobuf:"varint,7,opt,name=step,proto3" json:"step,omitempty"`                                    // 第几步
	AssigneeName string `protobuf:"bytes,8,opt,name=assignee_name,json=assigneeName,proto3" json:"assignee_name,omitempty"` // 审批人
	IsFinished   int64  `protobuf:"varint,9,opt,name=is_finished,json=isFinished,proto3" json:"is_finished,omitempty"`      // 是否完成
	IsAgree      int64  `protobuf:"varint,10,opt,name=is_agree,json=isAgree,proto3" json:"is_agree,omitempty"`              // 是否同意
	Comment      string `protobuf:"bytes,11,opt,name=comment,proto3" json:"comment,omitempty"`                              // 提交内容
}

func (x *TaskProcinstData) Reset() {
	*x = TaskProcinstData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskProcinstData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskProcinstData) ProtoMessage() {}

func (x *TaskProcinstData) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskProcinstData.ProtoReflect.Descriptor instead.
func (*TaskProcinstData) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{21}
}

func (x *TaskProcinstData) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskProcinstData) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TaskProcinstData) GetClaimTime() int64 {
	if x != nil {
		return x.ClaimTime
	}
	return 0
}

func (x *TaskProcinstData) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *TaskProcinstData) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *TaskProcinstData) GetNodeType() string {
	if x != nil {
		return x.NodeType
	}
	return ""
}

func (x *TaskProcinstData) GetStep() int64 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *TaskProcinstData) GetAssigneeName() string {
	if x != nil {
		return x.AssigneeName
	}
	return ""
}

func (x *TaskProcinstData) GetIsFinished() int64 {
	if x != nil {
		return x.IsFinished
	}
	return 0
}

func (x *TaskProcinstData) GetIsAgree() int64 {
	if x != nil {
		return x.IsAgree
	}
	return 0
}

func (x *TaskProcinstData) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type ExecutionFindOneByProcinstIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcinstId string `protobuf:"bytes,1,opt,name=procinst_id,json=procinstId,proto3" json:"procinst_id,omitempty"`
	TenantId   string `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
}

func (x *ExecutionFindOneByProcinstIdReq) Reset() {
	*x = ExecutionFindOneByProcinstIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionFindOneByProcinstIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionFindOneByProcinstIdReq) ProtoMessage() {}

func (x *ExecutionFindOneByProcinstIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionFindOneByProcinstIdReq.ProtoReflect.Descriptor instead.
func (*ExecutionFindOneByProcinstIdReq) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{22}
}

func (x *ExecutionFindOneByProcinstIdReq) GetProcinstId() string {
	if x != nil {
		return x.ProcinstId
	}
	return ""
}

func (x *ExecutionFindOneByProcinstIdReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type ExecutionFindOneByProcinstIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                      // 执行id
	ProcdefName string `protobuf:"bytes,4,opt,name=procdef_name,json=procdefName,proto3" json:"procdef_name,omitempty"` // 流程名
	NodeInfos   string `protobuf:"bytes,5,opt,name=node_infos,json=nodeInfos,proto3" json:"node_infos,omitempty"`       // 节点信息
	StartTime   int64  `protobuf:"varint,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`      // 开始时间
}

func (x *ExecutionFindOneByProcinstIdResp) Reset() {
	*x = ExecutionFindOneByProcinstIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workflow_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionFindOneByProcinstIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionFindOneByProcinstIdResp) ProtoMessage() {}

func (x *ExecutionFindOneByProcinstIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_workflow_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionFindOneByProcinstIdResp.ProtoReflect.Descriptor instead.
func (*ExecutionFindOneByProcinstIdResp) Descriptor() ([]byte, []int) {
	return file_workflow_proto_rawDescGZIP(), []int{23}
}

func (x *ExecutionFindOneByProcinstIdResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExecutionFindOneByProcinstIdResp) GetProcdefName() string {
	if x != nil {
		return x.ProcdefName
	}
	return ""
}

func (x *ExecutionFindOneByProcinstIdResp) GetNodeInfos() string {
	if x != nil {
		return x.NodeInfos
	}
	return ""
}

func (x *ExecutionFindOneByProcinstIdResp) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

var File_workflow_proto protoreflect.FileDescriptor

var file_workflow_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x22, 0x0c, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xb0,
	0x01, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x63, 0x64, 0x65, 0x66, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x3f, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x63, 0x64, 0x65, 0x66, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x99, 0x01, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x63, 0x64, 0x65, 0x66, 0x46, 0x69,
	0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x63, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x60,
	0x0a, 0x13, 0x50, 0x72, 0x6f, 0x63, 0x64, 0x65, 0x66, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x33, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x64,
	0x65, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0x94, 0x01, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x63, 0x64, 0x65, 0x66, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x22, 0x40, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x63, 0x64,
	0x65, 0x66, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xc7, 0x01, 0x0a, 0x12, 0x50, 0x72,
	0x6f, 0x63, 0x64, 0x65, 0x66, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x22, 0xdc, 0x01, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x64,
	0x65, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x63, 0x64, 0x65, 0x66, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x69, 0x6e,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x63, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x64, 0x65, 0x66, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x64, 0x65, 0x66, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x24, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73, 0x74, 0x46, 0x69,
	0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xe8, 0x03, 0x0a, 0x13, 0x50, 0x72, 0x6f,
	0x63, 0x69, 0x6e, 0x73, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x72, 0x6f, 0x63, 0x64, 0x65, 0x66, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x64, 0x65, 0x66, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65,
	0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0xc2, 0x02, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73, 0x74,
	0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x64, 0x65, 0x66, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x64, 0x65, 0x66, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x63,
	0x69, 0x6e, 0x73, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xe5, 0x03, 0x0a,
	0x10, 0x50, 0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x64, 0x65, 0x66, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x64, 0x65, 0x66, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74,
	0x65, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x75, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73, 0x74,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xab, 0x01, 0x0a, 0x0f,
	0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x70, 0x61,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x17, 0x54, 0x61, 0x73,
	0x6b, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x18, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x85, 0x03, 0x0a, 0x0c, 0x54, 0x61, 0x73,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x74, 0x65, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x67, 0x72, 0x65, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x67, 0x72, 0x65, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f,
	0x63, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73, 0x74,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x3e, 0x0a, 0x1b, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64,
	0x22, 0x54, 0x0a, 0x1c, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x34, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xcb, 0x02, 0x0a, 0x10, 0x54, 0x61, 0x73, 0x6b, 0x50,
	0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x69, 0x73, 0x41, 0x67, 0x72, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x5f, 0x0a, 0x1f, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x69, 0x6e,
	0x73, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x69,
	0x6e, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x63, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x20, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x63,
	0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x63, 0x64, 0x65, 0x66, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x64, 0x65, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x32, 0xe1, 0x08, 0x0a, 0x08,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x47, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x63,
	0x64, 0x65, 0x66, 0x41, 0x64, 0x64, 0x12, 0x1d, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x64, 0x65, 0x66, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4d, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x63, 0x64, 0x65, 0x66, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x20, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x64, 0x65, 0x66, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x5a, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x63, 0x64, 0x65, 0x66, 0x46, 0x69, 0x6e, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x64, 0x65, 0x66, 0x46, 0x69, 0x6e, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x64, 0x65, 0x66,
	0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x0e,
	0x50, 0x72, 0x6f, 0x63, 0x64, 0x65, 0x66, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x12, 0x21,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x64, 0x65, 0x66, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x22, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x64, 0x65, 0x66, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1f, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x5a, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73, 0x74, 0x46, 0x69,
	0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x12, 0x22, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73, 0x74, 0x46,
	0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x69,
	0x6e, 0x73, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d,
	0x0a, 0x10, 0x50, 0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x23, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73, 0x74, 0x46, 0x69, 0x6e, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73,
	0x74, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a,
	0x0d, 0x50, 0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x20,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x1a, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0c,
	0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x69, 0x0a, 0x14, 0x54, 0x61, 0x73,
	0x6b, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x27, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x75, 0x0a, 0x18, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x2b, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79,
	0x50, 0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x50, 0x72, 0x6f,
	0x63, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x81, 0x01, 0x0a, 0x1c,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65,
	0x42, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2f, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x42, 0x79,
	0x50, 0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e, 0x65, 0x42,
	0x79, 0x50, 0x72, 0x6f, 0x63, 0x69, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x42,
	0x12, 0x5a, 0x10, 0x2e, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_workflow_proto_rawDescOnce sync.Once
	file_workflow_proto_rawDescData = file_workflow_proto_rawDesc
)

func file_workflow_proto_rawDescGZIP() []byte {
	file_workflow_proto_rawDescOnce.Do(func() {
		file_workflow_proto_rawDescData = protoimpl.X.CompressGZIP(file_workflow_proto_rawDescData)
	})
	return file_workflow_proto_rawDescData
}

var file_workflow_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_workflow_proto_goTypes = []interface{}{
	(*CommonResp)(nil),                       // 0: workflowclient.CommonResp
	(*ProcdefAddReq)(nil),                    // 1: workflowclient.ProcdefAddReq
	(*ProcdefDeleteReq)(nil),                 // 2: workflowclient.ProcdefDeleteReq
	(*ProcdefFindListReq)(nil),               // 3: workflowclient.ProcdefFindListReq
	(*ProcdefFindListResp)(nil),              // 4: workflowclient.ProcdefFindListResp
	(*ProcdefListData)(nil),                  // 5: workflowclient.ProcdefListData
	(*ProcdefFindOneReq)(nil),                // 6: workflowclient.ProcdefFindOneReq
	(*ProcdefFindOneResp)(nil),               // 7: workflowclient.ProcdefFindOneResp
	(*ProcessStartReq)(nil),                  // 8: workflowclient.ProcessStartReq
	(*ProcinstFindOneReq)(nil),               // 9: workflowclient.ProcinstFindOneReq
	(*ProcinstFindOneResp)(nil),              // 10: workflowclient.ProcinstFindOneResp
	(*ProcinstFindListReq)(nil),              // 11: workflowclient.ProcinstFindListReq
	(*ProcinstFindListResp)(nil),             // 12: workflowclient.ProcinstFindListResp
	(*ProcinstListData)(nil),                 // 13: workflowclient.ProcinstListData
	(*ProcinstCloseReq)(nil),                 // 14: workflowclient.ProcinstCloseReq
	(*TaskCompleteReq)(nil),                  // 15: workflowclient.TaskCompleteReq
	(*TaskFindListByUserIdReq)(nil),          // 16: workflowclient.TaskFindListByUserIdReq
	(*TaskFindListByUserIdResp)(nil),         // 17: workflowclient.TaskFindListByUserIdResp
	(*TaskListData)(nil),                     // 18: workflowclient.TaskListData
	(*TaskFindListByProcinstIdReq)(nil),      // 19: workflowclient.TaskFindListByProcinstIdReq
	(*TaskFindListByProcinstIdResp)(nil),     // 20: workflowclient.TaskFindListByProcinstIdResp
	(*TaskProcinstData)(nil),                 // 21: workflowclient.TaskProcinstData
	(*ExecutionFindOneByProcinstIdReq)(nil),  // 22: workflowclient.ExecutionFindOneByProcinstIdReq
	(*ExecutionFindOneByProcinstIdResp)(nil), // 23: workflowclient.ExecutionFindOneByProcinstIdResp
}
var file_workflow_proto_depIdxs = []int32{
	5,  // 0: workflowclient.ProcdefFindListResp.list:type_name -> workflowclient.ProcdefListData
	13, // 1: workflowclient.ProcinstFindListResp.list:type_name -> workflowclient.ProcinstListData
	18, // 2: workflowclient.TaskFindListByUserIdResp.list:type_name -> workflowclient.TaskListData
	21, // 3: workflowclient.TaskFindListByProcinstIdResp.list:type_name -> workflowclient.TaskProcinstData
	1,  // 4: workflowclient.Workflow.ProcdefAdd:input_type -> workflowclient.ProcdefAddReq
	2,  // 5: workflowclient.Workflow.ProcdefDelete:input_type -> workflowclient.ProcdefDeleteReq
	3,  // 6: workflowclient.Workflow.ProcdefFindList:input_type -> workflowclient.ProcdefFindListReq
	6,  // 7: workflowclient.Workflow.ProcdefFindOne:input_type -> workflowclient.ProcdefFindOneReq
	8,  // 8: workflowclient.Workflow.ProcessStart:input_type -> workflowclient.ProcessStartReq
	9,  // 9: workflowclient.Workflow.ProcinstFindOne:input_type -> workflowclient.ProcinstFindOneReq
	11, // 10: workflowclient.Workflow.ProcinstFindList:input_type -> workflowclient.ProcinstFindListReq
	14, // 11: workflowclient.Workflow.ProcinstClose:input_type -> workflowclient.ProcinstCloseReq
	15, // 12: workflowclient.Workflow.TaskComplete:input_type -> workflowclient.TaskCompleteReq
	16, // 13: workflowclient.Workflow.TaskFindListByUserId:input_type -> workflowclient.TaskFindListByUserIdReq
	19, // 14: workflowclient.Workflow.TaskFindListByProcinstId:input_type -> workflowclient.TaskFindListByProcinstIdReq
	22, // 15: workflowclient.Workflow.ExecutionFindOneByProcinstId:input_type -> workflowclient.ExecutionFindOneByProcinstIdReq
	0,  // 16: workflowclient.Workflow.ProcdefAdd:output_type -> workflowclient.CommonResp
	0,  // 17: workflowclient.Workflow.ProcdefDelete:output_type -> workflowclient.CommonResp
	4,  // 18: workflowclient.Workflow.ProcdefFindList:output_type -> workflowclient.ProcdefFindListResp
	7,  // 19: workflowclient.Workflow.ProcdefFindOne:output_type -> workflowclient.ProcdefFindOneResp
	0,  // 20: workflowclient.Workflow.ProcessStart:output_type -> workflowclient.CommonResp
	10, // 21: workflowclient.Workflow.ProcinstFindOne:output_type -> workflowclient.ProcinstFindOneResp
	12, // 22: workflowclient.Workflow.ProcinstFindList:output_type -> workflowclient.ProcinstFindListResp
	0,  // 23: workflowclient.Workflow.ProcinstClose:output_type -> workflowclient.CommonResp
	0,  // 24: workflowclient.Workflow.TaskComplete:output_type -> workflowclient.CommonResp
	17, // 25: workflowclient.Workflow.TaskFindListByUserId:output_type -> workflowclient.TaskFindListByUserIdResp
	20, // 26: workflowclient.Workflow.TaskFindListByProcinstId:output_type -> workflowclient.TaskFindListByProcinstIdResp
	23, // 27: workflowclient.Workflow.ExecutionFindOneByProcinstId:output_type -> workflowclient.ExecutionFindOneByProcinstIdResp
	16, // [16:28] is the sub-list for method output_type
	4,  // [4:16] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_workflow_proto_init() }
func file_workflow_proto_init() {
	if File_workflow_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_workflow_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcdefAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcdefDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcdefFindListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcdefFindListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcdefListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcdefFindOneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcdefFindOneResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessStartReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcinstFindOneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcinstFindOneResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcinstFindListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcinstFindListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcinstListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcinstCloseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskCompleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskFindListByUserIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskFindListByUserIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskFindListByProcinstIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskFindListByProcinstIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskProcinstData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionFindOneByProcinstIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workflow_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionFindOneByProcinstIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_workflow_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_workflow_proto_goTypes,
		DependencyIndexes: file_workflow_proto_depIdxs,
		MessageInfos:      file_workflow_proto_msgTypes,
	}.Build()
	File_workflow_proto = out.File
	file_workflow_proto_rawDesc = nil
	file_workflow_proto_goTypes = nil
	file_workflow_proto_depIdxs = nil
}
